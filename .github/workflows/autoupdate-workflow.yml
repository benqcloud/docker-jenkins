name: autoupdate

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '0 2 * * *'

env:
  # Use docker.io for Docker Hub if empty
  GITHUB_REGISTRY: ghcr.io
  DOCKERHUB_REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if update available
        id: check
        uses: lucacome/docker-image-update-checker@v1.2.1
        with:
          base-image: jenkins/jenkins:lts
          image: ${{ env.IMAGE_NAME }}:lts

      - name: Setup Docker QEMU
        uses: docker/setup-qemu-action@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.GITHUB_REGISTRY }}
        uses: docker/login-action@v3
        if: steps.check.outputs.needs-updating == 'true'
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry ${{ env.DOCKERHUB_REGISTRY }}
        uses: docker/login-action@v3
        if: steps.check.outputs.needs-updating == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        if: steps.check.outputs.needs-updating == 'true'
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:lts
            ${{ env.IMAGE_NAME }}:lts
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:lts
          cache-to: type=inline
